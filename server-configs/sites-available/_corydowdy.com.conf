# ---------------------------------------------------------------------------------------------------------------------#
#                                                                                                                      #
#               A basic Server ( Virutal Host ) Configuration using Bolt CMS ( bolt.cm )                               #
#                                                                                                                      #
# ---------------------------------------------------------------------------------------------------------------------#

# ---------------------------------------------------------------------------------------------------------------------#
#                                                                                                                      #
# www to non-www redirect -- duplicate content is BAD:                                                                 #
# https://github.com/h5bp/html5-boilerplate/blob/5370479476dceae7cc3ea105946536d6bc0ee468/.htaccess#L362               #
# Choose between www and non-www, listen on the *wrong* one and redirect to                                            #
# the right one -- http://wiki.nginx.org/Pitfalls#Server_Name                                                          #
#                                                                                                                      #
# ---------------------------------------------------------------------------------------------------------------------#

server {
  # don't forget to tell on which port this server listens
  listen 80;

  # listen on the www host
  server_name www.WWW-DOMAIN-NAME.com;

  # and redirect to the non-www host (declared below)
  return 301 $scheme://DOMAIN-NAME.com$request_uri;
}


  # -----------------------------------------------------------------------#
  #                                                                        #
  #        SET UP FASTCGI CACHE                                            #
  #                                                                        #
  # -----------------------------------------------------------------------#

  fastcgi_cache_path /var/cache/nginx/ levels=1:2 keys_zone=<NAME_HERE>:100m inacti$
  fastcgi_cache_key "$scheme$request_method$host$request_uri";


server {
  # The host name to respond to
  server_name DOMAIN-NAME.com;

  # Path for static files
  root /var/www/DOMAIN-NAME.com/public;

  #Specify a charset
  charset utf-8;


  add_header X-Cache $upstream_cache_status;



  # pagespeed conf
  #include pagespeed.conf;

  # -------------------------------------------------------------------------------------#
  #                                                                                      #
  #           Security Headers                                                           #
  #                                                                                      #
  # -------------------------------------------------------------------------------------#

  # clear headers for xss for the following in location blocks
  # \.(appcache|atom|crx|css|cur|eot|f4[abpv]|flv|geojson|gif|htc|ico|jpe?g|js|json(ld)?|m4[av]|manifest|map|mp4|oex|og[agv]|opus|otf|pdf|png|rdf|rss|safariextz|svgz?|swf|tt[cf]|txt|vcf|vtt|webapp|web[mp]|woff2?|xml|xpi)$
  add_header X-XSS-Protection "1; mode=block";
  add_header X-Content-Type-Options "nosniff";
  add_header X-Frame-Options "SAMEORIGIN";

  # make sure to clear csp in location blocks for the following:
  # \.(appcache|atom|crx|css|cur|eot|f4[abpv]|flv|geojson|gif|htc|ico|jpe?g|js|json(ld)?|m4[av]|manifest|map|mp4|oex|og[agv]|opus|otf|pdf|png|rdf|rss|safariextz|svgz?|swf|topojson|tt[cf]|txt|vcf|vtt|webapp|web[mp]|woff2?|xml|xpi)$
  # more_clear_headers 'Content-Security-Policy';
  #
  add_header add_header Content-Security-Policy <POLICY HERE>;
  add_header add_header X-Content-Security-Policy <POLICY HERE>;
  add_header add_header X-WebKit-CSP <POLICY HERE>;
  # make sure to clear csp in location blocks
  more_clear_headers 'ETag';

  index index.php;

  location / {
    #naxsi rules
    include /etc/nginx/site.rules;
    try_files $uri $uri/ /index.php?$query_string;
  }

  location ~* /thumbs/(.*)$ {
      try_files $uri $uri/ /index.php?$query_string;
  }

  location ~* /async/(.*)$ {
      try_files $uri $uri/ /index.php?$query_string;
  }

  location /app/classes/upload {
      try_files $uri $uri/ /app/classes/upload/index.php?$query_string;
  }

  # If you set a custom branding path, you will need to change '/bolt/' here to match
  location ~* /bolt/(.*)$ {
      try_files $uri $uri/ /index.php?$query_string;
  }

  location ~* \.(?:css|js|gif|jpe?g|png|svg|ttf|woff)$ {
      access_log off;
      expires 30d;
      add_header Pragma public;
      add_header Cache-Control "public, mustrevalidate, proxy-revalidate";
  }

  location = /robots.txt { access_log off; log_not_found off; }
  location = /favicon.ico { access_log off; log_not_found off; expires 365d; }


   # ------------------------------------------------------------------------#
   #           CACHE SETTINGS                                                #
   # ------------------------------------------------------------------------#
   #Cache everything by default
   set $no_cache 0;


   # dont cache posts
   if ($request_method = POST ) {
       set $no_cache 1;
   }

   # dont cache logins
   if ($request_uri ~* "/(bolt/|/bolt/login/|/async/|/app/classes/upload|/contact)") {
       set $no_cache 1;
   }

   if ($request_uri = "/contact") {
       set $no_cache 1;



  location ~ \.php$ {
      limit_req zone=limit burst=5 nodelay;
      fastcgi_pass php;
      fastcgi_index index.php;
      include fastcgi_params;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
      fastcgi_param HTTPS off;
      # fastcgi cache
      fastcgi_cache corydowdy;
      # fastcgi_no_cache $no_cache $no_cache_dirs;
      fastcgi_cache_valid 200 60m;
      fastcgi_cache_bypass $no_cache;
      fastcgi_no_cache $no_cache;
      fastcgi_ignore_headers Cache-Control Expires Set-Cookie;
  }

  location ~ /\.ht {
      deny all;
  }

  location /app {
      deny all;
  }

  location ~ /vendor {
      deny all;
  }

  location ~ \.db$ {
      deny all;
  }

  location ~ \.yml$ {
      deny all;
  }

  location ~ \.twig$ {
      deny all;
  }

  # clear headers and those thangssssss

  location ~ \.(?:appcache|atom|crx|css|cur|eot|f4[abpv]|flv|geojson|gif|htc|ico|jpe?g|js|json(ld)?|m4[av]|manifest|map|mp4|oex|og[agv]|opus|otf|pdf|png|rdf|rss|safariextz|svgz?|swf|tt[cf]|txt|vcf|vtt|webapp|web[mp]|woff2?|xml|xpi)$ {
          more_clear_headers 'X-XSS-PROTECTION';
          more_clear_headers 'X-FRAME-OPTIONS';
          more_clear_headers 'Content-Security-Policy';
          more_clear_headers 'X-Content-Security-Policy';
          more_clear_headers 'X-WebKit-CSP';
  }

  # Include the basic h5bp config set
  # https://github.com/h5bp/server-configs-nginx
  include h5bp/basic.conf;

}
