---

image: demos/html5-videos-icon.png
icon: icon-demos-bolt
title: 'Bolt HTML5 Videos'
metadescription: 'A Bolt CMS extension that creates an HTML5 video tag to use for local or CDN videos. Also allows the usage of webm or mp4''s in a loop for gif like animations. '
stillActive: false
listingTitle:  Bolt HTML5 Videos
listingDescription: Bolt Extension For Local and Personal CDN HTML5 Videos
tags: [ demos ]
lightbox: true
---
  <div class="centered-header push-down">
    <h1>Bolt CMS HTML5 Video Extension</h1>
    <ul class="demo-nav">
      <li class="demo-nav--item">
        <a class="demo-nav--anchor" href="#how">Installation</a>
      </li>
      <li class="demo-nav--item">
        <a class="demo-nav--anchor" href="#config">Config Settings</a>
      </li>
      <li class="demo-nav--item">
        <a class="demo-nav--anchor" href="#localVid">Using Local Videos</a>
      </li>
      <li class="demo-nav--item">
        <a class="demo-nav--anchor" href="#cdn">Using A CDN</a>
      </li>
      <li class="demo-nav--item">
        <a class="demo-nav--anchor" href="#advanced">Advanced Usage</a>
      </li>
      <li class="demo-nav--item">
        <a class="demo-nav--anchor" href="#examples">Extension Examples</a>
      </li>
      <li class="demo-nav--item">
        <a class="demo-nav--anchor" href="#tips">Usage Tips</a>
      </li>
      <li class="demo-nav--item">
        <a class="demo-nav--anchor" href="#info">Extension Source</a>
      </li>
    </ul>
  </div>
  <!-- /.centered-header -->
  <section id="what-this-is" class="full">
    <h2 class="heading">What This Is</h2>

    <p style="color: #a62924">
      This deals with Bolt HTML5 Video versions 2.x.x+. If you need the demo for versions 1.x+ please see: <a
        href="/demo/bolt-html5-videos-v1">Bolt HTML5 Video v1x page</a>
    </p>

    <hr/>
    <p>
      This is a <a href="https://bolt.cm" class="external-link">Bolt</a> Content Management System extension that
      enables you to use a twig tag to insert HTML5 videos using the <strong>video</strong> element.
    </p>
    <p>
      Bolt's video field uses <a href="http://oembed.com/" class="external-link">oEmbed</a> - relevant <a
        href="https://docs.bolt.cm/3.0/manual/fieldtypes#video" class="external-link">bolt docs</a> on the field. This
      works great if you're using a video hosted on any of the video hosting services. If you have local videos, in your
      "files" directory, or on your own cdn you can't insert your videos. This allows that.
    </p>
  </section>
  <!-- /#what-this-is -->

  <section id="upgrade" class="full">
    <h2 class="heading">Upgrading to v2.x.x</h2>
    <p>
      Version 2.x.x no longer uses the filelist index in twig templates. Meaing the following code no longer works and
      <strong>MUST</strong> be changed.
    </p>
    <pre class="language-twig"><code>&lbrace;&lbrace; html5video( record.video.0, 'blogVideos' ) &rbrace;&rbrace;
</code></pre>
    <p>
      The needed change is to remove the <em>.0</em> from the record.video portion. It should now look as follows:
    </p>
    <pre class="language-twig"><code>&lbrace;&lbrace; html5video( record.video, 'blogVideos' ) &rbrace;&rbrace;
</code></pre>
    <h3 class="heading">Removed Config Options</h3>
    <p>
      The config options of <code class="language-yaml">multiple_source</code>, <code
        class="language-yaml">video_types</code>, and <code class="language-yaml">save_data</code> have been removed. If
      you are using those in your twig templates as over-rides similar to below you'll need to remove them from your
      templates.
    </p>

    <pre class="language-twig"><code> &lbrace;# this will no longer work #&rbrace;
&lbrace;&lbrace; html5video( record.video, 'default', &lbrace;
    save_data: true,
    multiple_source: true,
    video_types: [ 'webm', 'mp4' ],
    width_height: [ 640, '100%' ],
    media_fragment: [6, 16 ]
  &rbrace; )
&rbrace;&rbrace;
&lbrace;# this is how it should look now. without those removed options #&rbrace;
&lbrace;&lbrace; html5video( record.video, 'default', &lbrace;
    width_height: [ 640, '100%' ],
    media_fragment: [6, 16 ]
  &rbrace; )
&rbrace;&rbrace;</code>
</pre>
    <p>
      This also means all the settings found under <strong>save_data_options</strong> are no longer applied.
    </p>
  </section>
  <!-- /#upgrade.full -->

  <section id="install" class="full">
    <h2 class="heading">Installation</h2>
    <p>
      In the backend of your Bolt install navigate to the "Extras" menu in your dashboard and click "view/install
      extensions". In the "Install New Extension" search box type either "HTML5 Videos" or paste the following snippet.
    </p>
    <pre class="language-bash"><code>cdowdy/html5video</code></pre>
    <p>
      Then click "Browse Versions and install the latest stable version.
    </p>
    <h2 class="heading">Setup</h2>
    <p>
      This extension comes with a custom field type you can add to your contentType fields. If you wish to use this
      extension with your contentTypes you'll need to add it's field type to each field. The custom field type is: <code
        class="language-yaml">h5video</code>.
    </p>
    <pre class="language-yaml"><code>
entries:
    name: Entries
    singular_name: Entry
    fields:
    # Other Fields Here!
        video:
            type: h5video
</code></pre>

    <p>
      You can now upload or pick your files in your contentType edit or creation.
    </p>

    <div class="video-container center-text">
      <!-- TODO: move to array for v2.0 -->
      <figure>
        <video  controls
                preload="metadata"
                width="600"
                height="100%">
          <source src="https://pullzone1-corydowdywebdesi.netdna-ssl.com/assets/video/bolt-html5-video-upload.v2x.webm"
                  type="video/webm">
          <source src="https://pullzone1-corydowdywebdesi.netdna-ssl.com/assets/video/bolt-html5-video-upload.v2x.mp4"
                  type="video/mp4">
        </video>
        <figcaption>
          <p>
            Uploading Multiple videos through the contenttype's edit or creation screen
          </p>
        </figcaption>
      </figure>
    </div>

  </section>
  <!-- /#install -->

  <section id="how" class="full">
    <h2 class="heading">Quick Usage</h2>
    <p>
      Once you have your contenttype fields set you can quickly use the twig tag in your templates with default
      settings.
    </p>


    <div class="container">
      <div class="full-to-half">
        <p>Using the contenttype field like "record.video"</p>
        <pre class="language-twig"><code>
&lbrace;&lbrace; html5video( record.video, 'default' ) &rbrace;&rbrace;
</code></pre>
      </div>


      <div class="full-to-half">
        <p>Using a file from "files"</p>
        <pre class="language-twig"><code>
&lbrace;&lbrace; html5video( 'your-file.webm', 'default' ) &rbrace;&rbrace;
</code></pre>
      </div>
    </div>

    <p>
      The default settings used are:
    </p>

    <pre class="language-yaml"><code>
default:
  use_cdn: false
  attributes: [ 'controls']
  preload: 'metadata'</code></pre>
  </section><!-- /#how -->


  <section class="full" id="config">
    <h2 class="heading">Config Settings</h2>
    <p class="image-lightbox">
      For your own html5video settings you need to create a named config in the extensions config file. Either through a
      text editor and edit the "html5video.cdowdy.yml" file or through the extend screen and the <a
        class="image-lightbox" title="Extension Config Button"
        href="https://pullzone1-corydowdywebdesi.netdna-ssl.com/assets/img/html5video-extend-config.png">"config" button
        located in the extensions info box <span class="link-icon icon-picture"></span></a>.
    </p>


    <p>Here is an example named config</p>

    <pre class="language-yaml"><code>
blogVideos:
  use_cdn: false
  video_poster: 'path/to/poster.png'
  attributes: [ 'controls', 'muted' ]
  preload: 'metadata'
  width_height: [ 400, '100%' ]
</code></pre>

    <h3 class="heading">Using The Extension With Your Settings</h3>
    <p>
      With your named config in place you can move on to using the extension.
    </p>


    <pre class="language-yaml"><code>
# Your Contenttypes.yml file and your contenttype
blogposts:
    name: BlogPosts
    singular_name: blogpost
    fields:
    # Other Fields above or below
        video:
            type: h5video
</code></pre>

    <pre class="language-twig"><code>&lbrace;# Your Template and using the example config from above called blogVideos #&rbrace;
&lbrace;&lbrace; html5video( record.video, 'blogVideos' ) &rbrace;&rbrace;
</code></pre>


    <p>
      If you have multiple files in your files directory you'd like to use instead of picking them in your record edit
      and creation screen:
    </p>

    <pre class="language-twig"><code>&lbrace;# Your Template and using the example config from above called blogVideos #&rbrace;
&lbrace;&lbrace; html5video( [ 'your-file.webm', 'your-file.mp4' ], 'blogVideos' ) &rbrace;&rbrace;
</code></pre>
  </section>
  <!-- /#config -->


  <section id="localVid">
    <div class="full">
      <h2 class="heading">Using Local Videos</h2>
      <p>
        'Local videos' is defined as videos stored locally on your server. You can see any local videos you have
        uploaded
        in Bolt's backend under the File Management > Uploaded Files page.
      </p>
      <p>
        Below is an example of using a file from files.
      </p>
    </div>
    <div class="full-to-half">
      <p>File from "files". This is in a sub directory in files. </p>
      <pre class="language-twig"><code>&lbrace;&lbrace; html5video( 'demos/firefox-dev-serviceworkers-enable.webm', 'default' ) &rbrace;&rbrace;</code></pre>
      <p>
        To use the video that is locally stored and attached to our contentType's record you replace the file path with
        the contentType field you have chosen. For example:
      </p>
      <pre
        class="language-twig"><code>&lbrace;&lbrace; html5video( record.video, 'default' ) &rbrace;&rbrace;</code></pre>
    </div>

    <div class="full-to-half">
      <p>Result:</p>
      <video controls preload="metadata">
        <source src="/files/demos/firefox-dev-serviceworkers-enable.08222016.webm" type="video/webm">
        <source src="/files/demos/firefox-dev-serviceworkers-enable.08222016.mp4" type="video/mp4">
      </video>
    </div>
  </section>
  <!-- /#localVid -->



  <section id="cdn" class="full">
    <h2 class="heading">Using A CDN</h2>
    <p>
      A CDN is defined as your personal content delivery network. Examples of these are Amazon Cloudfront or MaxCDN.
    </p>
    <p>
      The CDN can be configured in the extensions config file so you all you have to do is pass a filename to the twig
      tag.
    </p>
    <pre class="language-yaml"><code>cdn_url: https://your-cdn.com/path/to/files/</code></pre>
    <p>
      Then in your twig template you can just pass the file name.
    </p>
    <pre
      class="language-twig"><code>&lbrace;&lbrace; html5video( 'my-cdn-file.webm', 'default' ) &rbrace;&rbrace;</code></pre>
    <p>
      The filename will be appended to your cdn URL set in the config.
    </p>
    <pre class="language-markup"><code>&lt;video controls preload="metadata"&gt;
  &lt;source src="https://your-cdn.com/path/to/files/my-cdn-file.webm" type="video/webm" &gt;
&lt;/video&gt;</code></pre>
    <p>
      Alternatively if you leave the config setting of cdn_url blank you can pass in the CDN url in the twig tag.
    </p>
    <pre class="language-yaml"><code>cdn_url:</code></pre>
    <pre class="language-twig"><code>&lbrace;&lbrace; html5video( 'https://your-cdn.com/path/to/files/my-cdn-file.webm', 'default' ) &rbrace;&rbrace;</code></pre>

    <p>
      If you Have a CDN Url set and pass in the full CDN URL you will get a bad URL. You have to choose one or the other
      as of right now.
    </p>

  </section>



  <section class="full" id="advanced">
    <h2 class="heading">Advanced Usage</h2>
    <p>
      You can over ride just about any default setting or user supplied settings in the extensions config inside a
      template. You must supply the video file or url you wish to use, followed by a rule set (or use defaults) then
      followed by which custom settings you wish to use
    </p>
    <p>
      When you decide to override inside the template you must follow the same conventions used in the extensions
      config. If an array is used ( brackets ie: [ ] ) use those in your templates too.
    </p>
    <h3 class="heading">Over-ride an array option and a string</h3>

    <div class="container">
      <div class="full-to-half">
        <p>
          The Default settings
        </p>
        <pre class="language-yaml"><code>default:
  use_cdn: false
  attributes: [ 'controls']
  preload: 'metadata'</code>
</pre>
        <p>
          Adding an option in our template to the attributes and preload setting and adding in a poster.
        </p>
        <pre class="language-twig"><code>&lbrace;&lbrace; html5video( record.video, 'default', &lbrace;
    preload: 'none',
    video_poster: '/files/demos/sw-enable-poster.png',
    attributes: [ 'controls', 'muted', 'loop', 'playsinline' ]
  &rbrace; )
&rbrace;&rbrace;</code>
</pre>
      </div>
      <div class="full-to-half">
        <p>
          The video will now have muted, loop and playsinline along with controls as attributes and preload="none" added
          to the video element
        </p>
        <video controls
               muted
               loop
               playsinline
               preload="none"
               poster="/files/demos/sw-enable-poster.png">
          <source src="/files/demos/firefox-dev-serviceworkers-enable.08222016.webm" type="video/webm">
          <source src="/files/demos/firefox-dev-serviceworkers-enable.08222016.mp4" type="video/mp4">
        </video>
      </div>
    </div>
  </section>
  <!-- /#advanced -->

  <div class="full" id="examples">
    <h2 class="heading">Examples</h2>
    <p>Usage Examples of some of the available options that do affect the video markup and output</p>
  </div>

  <section id="multi-cdn">
    <div class="full">
      <h3 class="heading">Multiple CDN Videos in a Template</h3>
      <p>
        Using a CDN you more than likely cannot access the file name in the backend of Bolt. You'll need to pass the
        filename(s) you wish to use in from your Twig template. Make sure you've setup your CDN URL first or use the
        full
        URL to your file on the CDN.
      </p>

      <h4 class="heading">Using <code class="language-yaml">cdn_url </code></h4>
      <p>
        First we'll have to set the 'cdn_url' in our extensions config file and create or use a named config block.
      </p>
    </div>
    <div class="full-to-half">
      <p>Setting the 'cdn_url' and 'use_cdn' to true in our named config.</p>
      <pre class="language-yaml"><code>cdn_url: https://www.mycdn.com/

# a named config block:
useCDNUrl:
  use_cdn: true
  attributes: [ 'controls']
  preload: 'auto'</code></pre>

    </div>
    <div class="full-to-half">
      <p class="center-text">
        result:
      </p>
      <figure>
        <video controls
               preload="metadata"
               width="600"
               height="100%">
          <source src="https://pullzone1-corydowdywebdesi.netdna-ssl.com/assets/video/yosemitie-spring.webm#t=6,16"
                  type="video/webm">
          <source src="https://pullzone1-corydowdywebdesi.netdna-ssl.com/assets/video/yosemitie-spring.mp4#t=6,16"
                  type="video/mp4">
        </video>
        <figcaption>
          <p>
            Video Author: <a href="https://vimeo.com/aaronrickel">Aaron Rickel</a>
            License: <a href="http://creativecommons.org/licenses/by/3.0/us/">ATTRIBUTION LICENSE 3.0</a>
          </p>
        </figcaption>
      </figure>
    </div>
    <div class="full">
      <p>
        Once we've done this we can move to the template we are using for the record. Typically <em>record.twig</em>.
        We'll then use an array (denoted with brackets) in our template with all the files we wish to use without the
        portion of the URL found in
        <code class="language-yaml">cdn_url:</code>
      </p>
      <pre class="language-twig"><code>&lbrace;# record.twig - our template to display the record content #&rbrace;
&lbrace;&lbrace; html5video( ['yosemitie-spring.webm', 'yosemitie-spring.mp4' ], 'useCDNUrl' ) &rbrace;&rbrace;</code>
</pre>
    </div>
    <div class="full">
      <h4 class="heading">Without a cdn_url set</h4>
      <p>
        Here no <em>cdn_url</em> is set so we have to use the full URL for our cdn in the template.
      </p>
    </div>


    <div class="full-to-half">
      <p>No 'cdn_url' and 'use_cdn' to true in our named config.</p>
      <pre class="language-yaml"><code>cdn_url:

# a named config block:
useCDNUrl:
  use_cdn: true
  attributes: [ 'controls']
  preload: 'auto'</code></pre>
    </div>
    <div class="full-to-half">
      <p class="center-text">
        result:
      </p>
      <figure>
        <video controls
               preload="metadata"
               width="600" height="100%">
          <source src="https://pullzone1-corydowdywebdesi.netdna-ssl.com/assets/video/yosemitie-spring.webm#t=6,16" type="video/webm">
          <source src="https://pullzone1-corydowdywebdesi.netdna-ssl.com/assets/video/yosemitie-spring.mp4#t=6,16" type="video/mp4">
        </video>
        <figcaption>
          <p>
            Video Author: <a href="https://vimeo.com/aaronrickel">Aaron Rickel</a>
            License: <a href="http://creativecommons.org/licenses/by/3.0/us/">ATTRIBUTION LICENSE 3.0</a>
          </p>
        </figcaption>
      </figure>
    </div>
    <div class="full">
      <p>
        Again we'll be working in your template used for the record &mdash;<em>record.twig</em>. We are also using
        brackets just like above and supplying all our videos we wish to use with the <strong>FULL URL</strong>.
      </p>
      <pre class="language-twig"><code>&lbrace;# record.twig - our template to display the record content #&rbrace;
&lbrace;&lbrace; html5video( ['https://www.mycdn.com/yosemitie-spring.webm', 'https://www.mycdn.com/yosemitie-spring.mp4' ], 'useCDNUrl' ) &rbrace;&rbrace;</code>
</pre>
    </div>
  </section>
  <!-- /#multi-cdn -->

  <section id="multi-local-example">
    <div class="full">
      <h3 class="heading">Multiple Local Videos in a Template</h3>
      <p>
        This is for using multiple videos in a template with the videos located in your '/files/' directory. You'll need
        to have a named config block with 'use_cdn' set to false. This is also the default for the extension.
      </p>
    </div>
    <div class="full-to-half">
      <p>
        Our default config with 'use_cdn' set to false.
      </p>
      <pre><code class="language-yaml">default:
  use_cdn: false
  attributes: [ 'controls']
  preload: 'metadata'</code></pre>
    </div>

    <div class="full-to-half">
      <p class="center-text">
        result:
      </p>
      <video controls preload="metadata" poster="/files/demos/sw-enable-poster.png" width="600" height="100%">
        <source src="/files/demos/firefox-dev-serviceworkers-enable.08222016.webm" type="video/webm">
        <source src="/files/demos/firefox-dev-serviceworkers-enable.08222016.mp4" type="video/mp4">
      </video>
    </div>
    <div class="full">
      <p>
        Just like the multiple videos using a cdn we'll use brackets with the file name, taking into account any sub
        directories, and the named config we are using.
      </p>
      <pre class="language-twig"><code>&lbrace;# record.twig - our template to display the record content #&rbrace;
&lbrace;&lbrace; html5video( ['your-file.webm', 'your-file.mp4' ], 'default' ) &rbrace;&rbrace;</code>
</pre>
    </div>
  </section>
  <!-- /#multi-local-example -->

  <section id="start-end-time">

    <div class="full">
      <h3 class="heading">Controlling A Videos Start and End Times</h3>
      <p>
        You can pass a media fragment ( a set of numbers) to the <em>media_fragment</em> setting. This allows you to
        start and stop a video at a specified time.
      </p>
    </div>
    <div class="full-to-half">

      <p>
        Your named config for the extension and providing a media fragment.
      </p>
      <pre class="language-yaml"><code>yourConfig:
# other settings here
media_fragment: [6, 16 ]</code></pre>
      <p>
        This video will start playing at 6 seconds and stop at 16.
      </p>
    </div>
    <div class="full-to-half">
      <p class="center-text">
        result:
      </p>
      <figure>
        <video controls preload="metadata" width="600" height="100%">
          <source src="https://pullzone1-corydowdywebdesi.netdna-ssl.com/assets/video/yosemitie-spring.mp4#t=6,16" type="video/mp4">
          <source src="https://pullzone1-corydowdywebdesi.netdna-ssl.com/assets/video/yosemitie-spring.webm#t=6,16" type="video/webm">
        </video>
        <figcaption>
          <p>
            Video Author: <a href="https://vimeo.com/aaronrickel">Aaron Rickel</a>
            License: <a href="http://creativecommons.org/licenses/by/3.0/us/">ATTRIBUTION LICENSE 3.0</a>
          </p>
        </figcaption>
      </figure>
    </div>
  </section>
  <!-- /#start-end-time -->

  <section id="giflike">

    <div class="full">
      <h3 class="heading">Using Videos for Animations like a Gif</h3>
    </div>
    <div class="full-to-half">
      <p>
        You can drop bandwidth heavy gif animations and use videos instead! There are a few things you'll need to have
        for this to work and act like a gif in Android and eventually iOS 10+.
      </p>
      <ul>
        <li>mark the video as muted</li>
        <li>add the autoplay attribute</li>
        <li>add the loop attribute</li>
        <li>special snowflake iOS needs the playsinline attribute</li>
      </ul>
      <pre class="language-yaml"><code>gifLike:
  attributes: [ 'autoplay', 'muted', 'loop', 'playsinline' ]
  width_height: [ 640, '100%' ]</code></pre>
    </div>

    <div class="full-to-half">
      <p class="center-text">
        result:
      </p>
      <video controls autoplay muted loop playsinline preload="metadata" width="640" height="100%">
        <source src="https://pullzone1-corydowdywebdesi.netdna-ssl.com/assets/video/chloe-gizmo-run.mp4" type="video/mp4">
        <source src="https://pullzone1-corydowdywebdesi.netdna-ssl.com/assets/video/chloe-gizmo-run.webm" type="video/webm">
      </video>
    </div>
  </section>
  <!-- /#giflike -->
  <div id="tips" class="full">
    <h2 class="heading">Usage Tips</h2>
    <ol>

      <li>
        <strong>Webm</strong> Files are typically smaller than MP4 files.
      </li>
      <li>
        <strong>Don't Use Autoplay on videos!</strong>
        <ul>
          <li>Autoplay is ok though for gif like animations</li>
        </ul>
      </li>
      <li>
        For gif like animations use the following in your attributes settings for best browser support & user experience
        <ul>
          <li>autoplay</li>
          <li>muted</li>
          <li>loop</li>
          <li>playsinline</li>
        </ul>
      </li>
    </ol>
  </div>


  <div id="info" class="full">
    <h2 class="heading">Extension Source and Bug Filling</h2>
    <p>The source for Bolt HTML5 Videos can be found at my github page</p>
    <ul class="no-bullet">
      <li>
        <a href="https://github.com/cdowdy/bolt-html5-video" class="external-link">Github Source: Bolt HTML5 Videos <span class="link-icon icon-github-link"></span></a>
      </li>
    </ul>
    <p>Bolt HTML5 Videos Bug filling</p>
    <ul class="no-bullet">
      <li>
        <a href="https://github.com/cdowdy/bolt-html5-video/issues" class="external-link">Bolt HTML5 Video Issues  <span class="link-icon icon-github-link"></span></a>
      </li>
    </ul>
    <p>Bolt HTML5 Videos Extensions Store Page</p>
    <ul class="no-bullet">
      <li>
        <a href="https://market.bolt.cm/view/cdowdy/html5video" class="external-link">Bolt Store: Bolt HTML5 Video  <span class="link-icon icon-github-link"></span></a>
      </li>
    </ul>
  </div>
